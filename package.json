{
  "name": "creaton",
  "version": "0.0.1",
  "description": "Creaton",
  "license": "UNLICENSED",
  "private": true,
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^3.9.1",
    "@typescript-eslint/parser": "^3.9.1",
    "cross-env": "^7.0.3",
    "dotenv-cli": "^3.1.0",
    "eslint": "^7.17.0",
    "eslint-config-prettier": "^6.13.0",
    "eslint-plugin-prettier": "^3.3.0",
    "eslint-plugin-svelte3": "^2.7.3",
    "hardhat": "^2.3.0",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.2.1",
    "prettier-plugin-solidity": "^1.0.0-beta.2",
    "prettier-plugin-svelte": "^1.4.2",
    "rimraf": "^3.0.2",
    "rollup-plugin-node-builtins": "^2.1.2",
    "rollup-plugin-node-globals": "^1.4.0",
    "typescript": "3.9.7",
    "wait-on": "^5.2.1",
    "wighawag_newsh": "0.0.6"
  },
  "scripts": {
    "lint": "eslint \"**/*.{js,ts}\"",
    "lint:fix": "eslint --fix \"**/*.{js,ts}\"",
    "format": "prettier --write \"**/*.{ts,js,svelte,sol}\"",
    "test": "run-s contracts:test",
    "// externals : Setup external services locally (ethereum node, thegraph)": "",
    "stop": "run-s externals:down",
    "externals:down": "docker-compose down -v",
    "externals": "dotenv -e .env -e contracts/.env -- docker-compose up",
    "shell:externals": "newsh \"npm run externals\"",
    "// contracts : deploy smart contracts on local ethereum node": "",
    "contracts:test": "npm --prefix contracts test",
    "contracts:clean": "rimraf contracts/deployments/localhost && rimraf web/src/contracts.json",
    "contracts": "dotenv -e .env -e contracts/.env -- npm --prefix contracts run dev -- --export ../web/src/contracts.json",
    "shell:contracts": "newsh \"npm run contracts\"",
    "shell:contractsgoerli": "newsh \"npm run contractsgoerli\"",
    "contracts:deploy": "dotenv -e .env -e contracts/.env -- npm --prefix contracts run local:deploy -- --export ../web/src/contracts.json",
    "contracts:export": "dotenv -e .env -e contracts/.env -- npm --prefix contracts run local:export -- --export ../web/src/contracts.json",
    "seed": "wait-on web/src/contracts.json && dotenv -e .env -e contracts/.env -- npm --prefix contracts run local:seed",
    "seed:build": "run-s common:build seed",
    "// subgraphs : generate and deploy local subgraph": "",
    "subgraph": "wait-on web/src/contracts.json && dotenv -- npm --prefix subgraph run dev ../contracts/deployments/localhost",
    "shell:subgraph": "newsh \"npm run subgraph\"",
    "subgraph:setup": "newsh \"dotenv -- npm --prefix subgraph run local:setup\"",
    "subgraph:deploy": "wait-on web/src/contracts.json && dotenv -- npm --prefix subgraph run local:deploy ../contracts/deployments/localhost",
    "// web : build and serve the web app": "",
    "web": "dotenv -- npm --prefix web run dev",
    "shell:web": "newsh \"npm run web\"",
    "web:build": "run-s web:generate web:rebuild",
    "web:rebuild": "dotenv -- npm --prefix web run build",
    "web:serve": "dotenv -- npm --prefix web run serve --",
    "web:build:serve": "run-s web:build web:serve",
    "web:generate": "dotenv -- npm --prefix web run generate",
    "// GOERLI : deploy to goerli": "",
    "goerli:contracts": "dotenv -e .env.goerli -e .env -- npm --prefix contracts run goerli:deploy",
    "// Mumbai : deploy to goerli": "",
    "mumbai:contracts": "dotenv -e .env.mumbai -e .env -- npm --prefix contracts run mumbai:deploy",
    "// STAGING : deploy on staging": "",
    "staging:web:dev": "dotenv -e .env.staging -e .env -- npm --prefix web run dev",
    "staging:web:build": "run-s web:generate staging:contracts:export common:build staging:web:rebuild",
    "staging:web:build:serve": "run-s staging:web:build web:serve",
    "staging:web:rebuild": "dotenv -e .env.staging -e .env -- npm --prefix web run build",
    "staging:web:deploy": "dotenv -e .env.staging -e .env -- npm --prefix web run deploy",
    "staging:seed": "dotenv -e .env.staging -e .env -- npm --prefix contracts run staging:seed",
    "staging:contracts:export": "dotenv -e .env.staging -e .env -- npm --prefix contracts run staging:export -- --export ../web/src/contracts.json",
    "staging:contracts": "dotenv -e .env.staging -e .env -- npm --prefix contracts run staging:deploy -- --export ../web/src/contracts.json",
    "staging:subgraph": "dotenv -e .env.staging -e .env -- npm --prefix subgraph run staging:deploy ../contracts/deployments/staging",
    "staging:web": "run-s staging:web:build staging:web:deploy",
    "staging:clean": "rimraf contracts/deployments/staging && rimraf web/src/contracts.json",
    "staging": "run-s staging:clean staging:contracts staging:subgraph web:generate common:build staging:seed staging:web:rebuild staging:web:deploy",
    "staging:reset": "rimraf contracts/deployments/staging && run-s staging:contracts staging:subgraph web:generate common:build staging:web:rebuild staging:web:deploy",
    "// PRODUCTION : build on mainnet": "",
    "production:web:build": "run-s web:generate production:contracts:export common:build production:web:rebuild",
    "production:web:build:serve": "run-s production:web:build web:serve",
    "production:web:rebuild": "dotenv -e .env.production -e .env -- npm --prefix web run build",
    "production:web:deploy": "dotenv -e .env.production -e .env -- npm --prefix web run deploy",
    "production:contracts:export": "dotenv -e .env.production -e .env -- npm --prefix contracts run mainnet:export -- --export ../web/src/contracts.json",
    "production:contracts": "dotenv -e .env.production -e .env -- npm --prefix contracts run mainnet:deploy -- --export ../web/src/contracts.json",
    "production:subgraph": "dotenv -e .env.production -e .env -- npm --prefix subgraph run mainnet:deploy ../contracts/deployments/mainnet",
    "production:web": "run-s production:web:build production:web:deploy",
    "production": "run-s production:contracts production:subgraph web:generate common:build production:web:rebuild production:web:deploy",
    "// START : local development setup": "This setup external service, setup subgraph and deploy it on the local graph-node, deploy the contracts and seed it",
    "setup": "npm-run-all -l externals:down --parallel externals",
    "start": "npm-run-all -l externals:down contracts:clean --parallel common:dev externals subgraph:setup subgraph seed:build",
    "dev": "npm-run-all -l --parallel shell:common --sequential common:build contracts:clean shell:contracts subgraph:setup shell:subgraph seed",
    "shell:start": "npm-run-all -l --parallel shell:common shell:web shell:externals --sequential common:build subgraph:setup contracts:clean shell:contracts shell:subgraph seed",
    "shell:dev": "npm-run-all -l --parallel shell:common --sequential common:build subgraph:setup contracts:clean shell:contracts shell:subgraph seed shell:web"
  }
}
